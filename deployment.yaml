apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: controller
  name: controller
  namespace: ubiquti
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app: controller
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: controller
    spec:
      hostNetwork: true
      containers:
        - name: controller
          image: linuxserver/unifi-controller:version-6.0.45
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: controller-env-configmap
          # ports:
          #   - containerPort: 3478
          #     protocol: UDP
          #   - containerPort: 10001
          #     protocol: UDP
          #   - containerPort: 8080
          #     protocol: TCP
          #   - containerPort: 8443
          #     protocol: TCP
          #   - containerPort: 1900
          #     protocol: UDP
          #   - containerPort: 8843
          #     protocol: TCP
          #   - containerPort: 8880
          #     protocol: TCP
          #   - containerPort: 6789
          #     protocol: TCP
          #   - containerPort: 5514
          #     protocol: TCP
          volumeMounts:
            - mountPath: /usr/lib/unifi/data/db
              name: mongo-data-volume
            - mountPath: /config
              name: config-data-volume
          resources:
            limits:
              cpu: 1200m
              memory: 1536Mi
            requests:
              cpu: 800m
              memory: 1024Mi
          livenessProbe:
            httpGet:
              path: /
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 60
            timeoutSeconds: 5
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 60
            timeoutSeconds: 5
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 3
      # https://pracucci.com/kubernetes-dns-resolution-ndots-options-and-why-it-may-affect-application-performances.html
      # dnsPolicy: ClusterFirst
      # dnsConfig:
      #   options:
      #     - name: ndots
      #       value: "2"
      volumes:
        - name: mongo-data-volume
          emptyDir: {}
        - name: config-data-volume
          hostPath:
            path: /opt/unifi/config
            type: Directory
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 60
